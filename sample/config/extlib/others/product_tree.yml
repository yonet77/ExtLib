---
:component:
  :var: var_product_tree_list
  :id: id_product_tree_list
  :xtype: Ext.Panel
  :layout: accordion
  :width: 250
  :height: 450
  :autoScroll: true
  :items:
  - :layout: border
    :xtype: panel
    :title: <%= t('bom.product_tree_title') %>
    :border: false
    :height: 450
    :items:
    - :region: center
      :id: id_product_tree_panel
      :xtype: treepanel
      :margin: '5 5 0 5'
      :expanded: true
      :autoScroll: true
      :enableDD: true
      :dropConfig:
        :appendOnly: true
        :allowContainerDrop: true
      :tbar:
        :items:
        - :iconCls: icon-bom
          :text: <%= t('bom.create_new_product') %>
          :handler: 'function(){
                         var node = Ext.getCmp("id_product_tree_panel").getRootNode();
                         edit_product(node, null, null, "new", "Create Product..");
                      }'
        - :iconCls: icon-bmenu
          :text: <%= t('bom.bom_tool') %>
          :menu:
          - :iconCls: icon-bom
            :text: <%= t('bom.data_export_qty_by_date') %>
            :handler: function(){download_qty_by_date();}
#      :bbar:
#        :items:
#        - :iconCls: 'icon-bom'
#          :text: <%= t('bom.data_export_qty_by_date') %>
#          :handler: function(){download_qty_by_date();}
      :rootVisible: false
      :root: =new Ext.tree.AsyncTreeNode()
      :loader: =new Ext.app.ProductLoader({dataUrl:'<%= url_for(:controller=>:fuji, :action=>:get_product_tree_list) %>', clearOnLoad:true})
      :listeners: '{contextmenu: function(node, e){
                         node.select();
                         e.stopEvent();
                         if (node.attributes.data_type == "mst"){
                           var_product_tree_mst_context.showAt(e.getXY());
                         } else {
                           var_product_tree_trn_context.showAt(e.getXY());
                         }
                       },
                     click: function(node, e){
                         var bom_tree = Ext.getCmp("id_product_bom_tree_panel");
                         bom_tree.getLoader().baseParams = {data_type: node.attributes.data_type, bom_tree_id: node.attributes.top_tree_id};
                         var node_icon = (node.attributes.data_type == "mst") ? "mst_product" : "trn_product";
                         var pd_node_data = {"text": node.attributes.pd_key_no + " : " + node.attributes.pd_name,
                                             "iconCls": node_icon,
                                             "bom_tree_id": node.attributes.top_tree_id,
                                             "data_type": node.attributes.data_type,
                                             "product_id": node.attributes.pd_id};
                         var pd_node = new Ext.tree.TreeNode(pd_node_data);
                         bom_tree.setRootNode(pd_node);
                         bom_tree.getLoader().load(pd_node);
                         pd_node.expand();
                         bom_tree.show();
                         init_bom_grid();
                         Ext.getCmp("id_product_tree_list").doLayout();
                         Ext.getCmp("id_product_tree_list").getLayout().setActiveItem("id_product_bom_tree_panel");
                       },
                     nodedrop: function(e){
                       relate_trn_to_mst(e.dropNode, e.dropNode.attributes.pd_id, e.target.attributes.pd_id);
                       }
                    }'
    #:add_PartsListView(Ext.getCmp("id_product_tree_list"), node.attributes.data_type, node.attributes.top_tree_id);
  - :id: id_product_bom_tree_panel
    :title: <%= t('bom.bom_tree_title') %>
    :xtype: treepanel
    :margin: '5 5 0 5'
    :hidden: true
    :expanded: true
    :autoScroll: true
    :rootVisible: true
    #:enableDD: true
    :animate: true
    :root:
      :nodeType: async
    :loader: =new Ext.app.BomLoader({dataUrl:'<%= url_for(:controller=>:fuji, :action=>:get_subbom_tree) %>', clearOnLoad:true})
    :listeners: '{click: function(node, e){
                       var bom_tree = node.getOwnerTree();
                       reload_bom_grid(node.attributes.data_type, node.attributes.product_id, node.attributes.bom_tree_id);
                     },
                   beforeexpandnode: function(node, deep, anim){
                       var bom_tree = node.getOwnerTree();
                       var subNode = node.firstChild;
                       if(subNode == null){return;}
                       if(node.firstChild.attributes.bom_tree_id == null){
                         bom_tree.getLoader().baseParams = {data_type: node.attributes.data_type, bom_tree_id: node.attributes.bom_tree_id};
                         bom_tree.getLoader().load(node);
                         node.expand();
                       }
                     },
                   nodedrop: function(e){
                       edit_bom_tree(e.dropNode, e.target, e.point);
                     }
                  }'
